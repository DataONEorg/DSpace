<?xml version="1.0" encoding="UTF-8"?>
<!--

    The contents of this file are subject to the license and copyright
    detailed in the LICENSE and NOTICE files at the root of the source
    tree and available online at

    http://www.dspace.org/license/

-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="mn" version="2.5">

    <!-- DSpace Configuration Information -->
    <context-param>
        <param-name>dspace-config</param-name>
        <param-value>${dspace.dir}/config/dspace.cfg</param-value>
    </context-param>

    <!-- new ConfigurationService initialization for dspace.dir -->
    <context-param>
        <description>
            The location of the main DSpace configuration file
        </description>
        <param-name>dspace.dir</param-name>
        <param-value>${dspace.dir}</param-value>
    </context-param>

    <!--
    session/request filter (from util), handles setting up requests and sessions correctly.
     This webapp will initialize a the Context appropriately so that it may be gotten and used
     in the application without instantiation

     -->
    <filter>
        <filter-name>request</filter-name>
        <filter-class>org.dspace.utils.servlet.DSpaceWebappServletFilter</filter-class>
    </filter>

    <filter>
        <filter-name>dspace-context</filter-name>
        <filter-class>org.dspace.app.util.DSpaceContextServletFilter</filter-class>
    </filter>


    <!-- Filter mappings -->
    <filter-mapping>
        <filter-name>request</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>dspace-context</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.dspace.app.util.DSpaceContextListener</listener-class>
    </listener>

    <!-- kernel start listener (from impl)
    	The following listener can be used instead of the filter below, it is simpler, cleaner
    	and eliminates the need for a DSpaceKernelServletFilter filter to be involved with the
    	request cycle.
    -->
    <listener>
        <listener-class>org.dspace.servicemanager.servlet.DSpaceKernelServletContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>



</web-app>
